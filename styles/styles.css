:root {
  /*Son propiedades vacias, equivalnetes para guardar variables en css*/
  --blanco: #fff;
  --negro: #000;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
} /*- EL asterisco selecciona todo
  /** El Afetr y Before son elementos que no existen en HTML, pero si en CSS. Son llamados Pseudoelementos
  /*$ Este codigo ayuda a que el padding no se agregue a los elementos que se cambien el tamaño como espacio adicional. Sino que dentro del mismo contenedor*/

body {
  font-size: 16px; /*? 1rem = 10px*/
  font-family: "Krub", sans-serif;
}

h1 {
  font-size: 3.8rem;
}
h2 {
  font-size: 2.8rem;
}
h3 {
  font-size: 1.8rem;
}
.titulo span {
  font-size: 2rem;
}

.contenedor {
  max-width: 120rem; /* Seria igual a 1200px*/
  margin: 0 auto; /*? Se le pone "auto" en ambos lados donde se quiera centrar el elemento*/
  /*$ Si 2 valores se repiten. Es decir el Top es igual al Bottom, y L es igual al R, entonces se puede limitar a dejar solo 2 parametros
                /*$ En vez de poner "0 auto 0 auto" se pone como está*/
}

.nav-bg {
  background-color: var(--secundario);
}

.main-nav {
  display: flex; /*Habilita un mejor control de como se muestran los elementos*/
  flex-direction: column;
  align-items: center;
}

@media (min-width: 768px) {
  .main-nav {
    flex-direction: row;
    justify-content: space-between; /*Es la manera en la que se toma la separacion de cada elemento*/
    /*? Con el flex-direction se puede poner la direccion en la cual que se muestre la informacion
  EL default del flex-direction es ROW */
  }
}
.main-nav a {
  color: var(--blanco);
  text-decoration: none;
  font-size: 2rem;
  font-weight: bold;
  padding: 1rem;
}

.main-nav a:hover {
  background-color: var(--primario);
  color: var(--negro);
}

.hero {
  background-image: url("../img/hero.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  height: 450px;
  position: relative; /*? Para que un elemento tenga una posicion absolutal. Su padre debera tener una position relativa 
  /*? En caso de que no se le ponga al padre, tomara las coordenadas de todo el documento como el padre*/
}

.content-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6); /*Sintaxis anterior*/
  background-color: rgb(0 0 0 / 70%);
  height: 100%;
  width: 100%;
  /*$ Alinear verticalmente*/
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.content-hero h2,
.content-hero p {
  color: var(--blanco);
}
