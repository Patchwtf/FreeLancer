:root {
  /*Son propiedades vacias, equivalnetes para guardar variables en css*/
  --blanco: #fff;
  --negro: #000;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
}
/*Globales*/
html {
  font-size: 62.5%;
  box-sizing: border-box;
  /*scroll-snap-type: y mandatory; /*Para Scroll Snap en el eje Y*/
}

/*Scroll Snap*/
.main-nav,
.formulario {
  scroll-snap-align: center;
  scroll-snap-stop: always;
}

*,
*:before,
*:after {
  box-sizing: inherit;
} /*- EL asterisco selecciona todo
  /** El Afetr y Before son elementos que no existen en HTML, pero si en CSS. Son llamados Pseudoelementos
  /*$ Este codigo ayuda a que el padding no se agregue a los elementos que se cambien el tamaño como espacio adicional. Sino que dentro del mismo contenedor*/

body {
  font-size: 16px; /*? 1rem = 10px*/
  font-family: "Krub", sans-serif;
  background-image: linear-gradient(to top, #dfe9f3 0%, var(--blanco) 100%);
}

.contenedor {
  max-width: 120rem; /* Seria igual a 1200px*/
  margin: 0 auto; /*? Se le pone "auto" en ambos lados donde se quiera centrar el elemento*/
  /*$ Si 2 valores se repiten. Es decir el Top es igual al Bottom, y L es igual al R, entonces se puede limitar a dejar solo 2 parametros
                /*$ En vez de poner "0 auto 0 auto" se pone como está*/
}

.button {
  background-color: var(--secundario);
  color: var(--blanco);
  padding: 1rem 2rem;
  margin-top: 1rem;
  font-size: 2rem;
  text-decoration: none;
  text-transform: uppercase;
  font-weight: 700;
  border-radius: 0.5rem;
  width: 90%;
  /*?Espreferibleponerprimerolosajustesqueseveranenunaresolucióngenerica,yenelmediaaquellosdelaresoluciónespecial*/
  text-align: center;
  border: none;
}

@media (min-width: 480px) {
  .button {
    width: auto;
  }
}

.button:hover {
  cursor: pointer;
}

.sombra {
  box-shadow: 0px 5px 15px 0px rgba(133, 133, 133, 0.74);
  background-color: var(--blanco);
  padding: 2rem;
  border-radius: 1rem;
}

/* Tipografia */

h1 {
  font-size: 3.8rem;
}
h2 {
  font-size: 2.8rem;
}
h3 {
  font-size: 1.8rem;
}
.titulo span {
  font-size: 2rem;
}
/* Utilidades */
/*$ San una propiedad y un valor por clase*/
.w-sm-100 {
  width: 100%;
}

.nav-bg {
  background-color: var(--secundario);
}

@media (min-width: 760px) {
  .w-sm-100 {
    width: auto;
  }
}

.flex {
  display: flex;
}

.aling-derecha {
  justify-content: flex-end;
}

/* Navegación principal */

.main-nav {
  display: flex; /*Habilita un mejor control de como se muestran los elementos*/
  flex-direction: column;
  align-items: center;
}

.subtitulo {
  text-align: center;
  font-weight: bold;
}

@media (min-width: 768px) {
  .main-nav {
    flex-direction: row;
    justify-content: space-between; /*Es la manera en la que se toma la separacion de cada elemento*/
    /*? Con el flex-direction se puede poner la direccion en la cual que se muestre la informacion
  EL default del flex-direction es ROW */
  }
}
.main-nav a {
  color: var(--blanco);
  text-decoration: none;
  font-size: 2rem;
  font-weight: bold;
  padding: 1rem;
}

.main-nav a:hover {
  background-color: var(--primario);
  color: var(--negro);
}

.hero {
  background-image: url("../img/hero.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  height: 450px;
  position: relative; /*? Para que un elemento tenga una posicion absolutal. Su padre debera tener una position relativa 
  /*? En caso de que no se le ponga al padre, tomara las coordenadas de todo el documento como el padre*/
  margin-bottom: 2rem;
}

.content-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.6); /*Sintaxis anterior*/
  background-color: rgb(0 0 0 / 70%);
  height: 100%;
  width: 100%;
  /*$ Alinear verticalmente*/
  display: flex; /*Esto es flexbox*/
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.content-hero h2,
.content-hero p {
  color: var(--blanco);
}

.content-hero p {
  display: flex;
  align-items: center;
}

@media (min-width: 700px) {
  .servicios {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /** Sintaxis Larga*/
    /*grid: none / 1fr 1fr 1fr; /** Sintaxis corta*/
    /**? El # de fr define el tamaño de la fraccion */
    column-gap: 5rem; /*Separaciòn en columnas*/
  }
}

/*servicios*/

.servicio {
  display: flex;
  flex-direction: column;
  align-items: center;
}
.servicio h3 {
  color: var(--secundario);
  font-weight: normal;
}
.servicio p {
  line-height: 2;
  text-align: center;
}

.servicio .iconos {
  height: 15rem;
  width: 15rem;
  background-color: var(--primario);
  border-radius: 50%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}

/*Contacto*/

.formulario {
  background-color: var(--gris);
  width: min(60rem, 100%);
  /*Utililzarelvalormaspequenoparahacerelcalculoademasahorramediaquery*/
  margin: 0 auto;
  /*?SoloseutilizasinoesunFLex*/
  padding: 2rem;
  border-radius: 1rem;
}

.formulario fieldset {
  border: none;
}

.formulario legend {
  text-align: center;
  font-size: 1.8rem;
  text-transform: uppercase;
  font-weight: 700;
  margin-bottom: 2rem;
  color: var(--primario);
}

@media (min-width: 768px) {
  .contenedor-campos {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: auto auto 20rem;
    column-gap: 1rem; /*Separación de columnas*/
  }

  .campo:nth-child(3),
  .campo:nth-child(4) {
    /*nth-child(n) Se seleccionan los elementos de la misma clase, pero seleccionando su posición del arreglo empezando desde 0*/
    grid-column: 1/3;
  }
}

.campo {
  margin-bottom: 1rem;
}

.campo label {
  color: var(--blanco);
  font-weight: bold;
  margin-bottom: 0.5rem;
  display: block;
}

.campo textarea {
  height: 18rem;
}

.campo input,
.campo textarea {
  width: 100%;
  border: none;
  padding: 1.5rem;
  border-radius: 0.5rem;
}

/** Footer*/

.footer {
  text-align: center;
}
